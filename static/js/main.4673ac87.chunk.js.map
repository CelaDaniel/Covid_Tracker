{"version":3,"sources":["consoleLog.jsx","InfoBox.jsx","LineGraph.jsx","util.jsx","Map.jsx","Table.jsx","App.jsx","reportWebVitals.jsx","index.js"],"names":["log","errConsoleColor","infoConsoleColor","succConsoleColor","varIn","msg","console","concat","varOut","succIn","info","succOut","errIn","error","errOut","InfoBox","props","title","cases","total","active","isRed","isOrange","otherProps","Object","objectWithoutProperties","react_default","a","createElement","Card","onClick","className","CardContent","Typography","color","gutterBottom","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","_ref","_useState","useState","_useState2","slicedToArray","setData","useEffect","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","catch","err","stop","apply","this","arguments","fetchData","length","es","datasets","backgroundColor","borderColor","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","sortData","toConsumableArray","sort","b","prettyPrintStat","stat","Map","countries","center","zoom","es_Map","TileLayer","url","attribution","undefined","map","country","idx","Circle","key","countryInfo","lat","long","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","showDataOnMap","Table","width","margin","scope","App","setInputCountry","_useState3","_useState4","setCountryInfo","_useState5","_useState6","setCountries","_useState7","_useState8","mapCountries","setMapCountries","_useState9","_useState10","tableData","setTableData","_useState11","_useState12","setCasesType","_useState13","lng","_useState14","mapCenter","setMapCenter","_useState15","_useState16","mapZoom","setMapZoom","App_regeneratorRuntime","name","iso2","sortedData","getCountriesData","onCountryChange","_callee2","e","countryCode","_context2","target","_x","FormControl","Select","variant","onChange","MenuItem","src_InfoBox_0","todayCases","todayRecovered","src_Map_0","src_Table_0","src_LineGraph","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","react","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4673ac87.chunk.js","sourcesContent":["export let log = {\r\n    errConsoleColor: 'color: #fff; background-color: #dc3545; border-color: #dc3545;padding: 0.375rem 0.75rem; font-size: 1rem; line-height: 1.5; border-radius: 0.25rem;',\r\n    infoConsoleColor: 'color: #fff; background-color: #007bff; border-color: #007bff;padding: 0.375rem 0.75rem; font-size: 1rem; line-height: 1.5; border-radius: 0.25rem;',\r\n    succConsoleColor: 'color: #fff; background-color: #28a745; border-color: #28a745;padding: 0.375rem 0.75rem; font-size: 1rem; line-height: 1.5; border-radius: 0.25rem;',\r\n\r\n    varIn: (msg) => {\r\n        console.log(\r\n            `%c 🔎 (Console Information) => ${msg}  `,\r\n            log.infoConsoleColor\r\n        );\r\n    },\r\n    varOut: (msg) => {\r\n        console.log(\r\n            `%c 🔎 (Console Information) => `,\r\n            log.infoConsoleColor,\r\n            msg\r\n        );\r\n    },\r\n    succIn: (msg) => {\r\n        console.info(\r\n            `%c ✅ (Fetched Response Success) => ${msg}  `,\r\n            `background: #008000; ${log.succConsoleColor}`\r\n        );\r\n    },\r\n    succOut: (msg) => {\r\n        console.info(\r\n            `%c ✅ (Fetched Response Success) => `,\r\n            log.succConsoleColor,\r\n            msg\r\n        );\r\n    },\r\n    errIn: (msg) => {\r\n        console.error(\r\n            `%c 🔥 (Fetched Response Error) => ${msg}  `,\r\n            log.errConsoleColor\r\n        );\r\n    },\r\n    errOut: (msg) => {\r\n        console.error(\r\n            `%c 🔥 (Fetched Response Error) =>  `,\r\n            log.errConsoleColor,\r\n            msg\r\n        );\r\n    },\r\n};","import React from 'react';\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\nimport './InfoBox.css';\r\n\r\nconst InfoBox = (props) => {\r\n\tconst { title, cases, total, active, isRed, isOrange, ...otherProps } =\r\n\t\tprops;\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tonClick={otherProps.onClick}\r\n\t\t\tclassName={`infoBox ${active && 'infoBox--selected'} ${isRed && 'infoBox--red'} ${isOrange && 'infoBox--orange'}`}\r\n\t\t>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography color='textSecondary' gutterBottom>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<h2\r\n\t\t\t\t\tclassName={`infoBox__cases ${!isRed && 'infoBox__cases--green'} ${isOrange && 'infoBox__total--orange'}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{cases}\r\n\t\t\t\t</h2>\r\n\r\n\t\t\t\t<Typography className='infoBox__total' color='textSecondary'>\r\n\t\t\t\t\t{total} Total\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default InfoBox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport numeral from 'numeral';\r\nimport { log } from './consoleLog';\r\n\r\nconst options = {\r\n\tlegend: {\r\n\t\tdisplay: false,\r\n\t},\r\n\telements: {\r\n\t\tpoint: {\r\n\t\t\tradius: 0,\r\n\t\t},\r\n\t},\r\n\tmaintainAspectRatio: false,\r\n\ttooltips: {\r\n\t\tmode: 'index',\r\n\t\tintersect: false,\r\n\t\tcallbacks: {\r\n\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\treturn numeral(tooltipItem.value).format('+0,0');\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tscales: {\r\n\t\txAxes: [\r\n\t\t\t{\r\n\t\t\t\ttype: 'time',\r\n\t\t\t\ttime: {\r\n\t\t\t\t\tformat: 'MM/DD/YY',\r\n\t\t\t\t\ttooltipFormat: 'll',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t\tyAxes: [\r\n\t\t\t{\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\t// Include a dollar sign in the ticks\r\n\t\t\t\t\tcallback: function(value, index, values) {\r\n\t\t\t\t\t\treturn numeral(value).format('0a');\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n\tlet chartData = [];\r\n\tlet lastDataPoint;\r\n\tfor (let date in data.cases) {\r\n\t\tif (lastDataPoint) {\r\n\t\t\tlet newDataPoint = {\r\n\t\t\t\tx: date,\r\n\t\t\t\ty: data[casesType][date] - lastDataPoint,\r\n\t\t\t};\r\n\t\t\tchartData.push(newDataPoint);\r\n\t\t}\r\n\t\tlastDataPoint = data[casesType][date];\r\n\t}\r\n\treturn chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType, ...props }) {\r\n\tconst [data, setData] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tawait fetch(\r\n\t\t\t\t'https://disease.sh/v3/covid-19/historical/all?lastdays=365'\r\n\t\t\t)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tlet chartData = buildChartData(data, casesType);\r\n\t\t\t\t\tsetData(chartData);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tlog.errIn(err);\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tfetchData();\r\n\t}, [casesType]);\r\n\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t{' '}\r\n\t\t\t{data.length > 0 && (\r\n\t\t\t\t<Line\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(204, 16, 52, 0.5)',\r\n\t\t\t\t\t\t\t\tborderColor: '#CC1034',\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t/>\r\n\t\t\t)}{' '}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from 'react';\r\nimport numeral from 'numeral';\r\nimport { Circle, Popup } from 'react-leaflet';\r\n\r\nconst casesTypeColors = {\r\n\tcases: {\r\n\t\thex: '#CC1034',\r\n\t\trgb: 'rgb(204, 16, 52)',\r\n\t\thalf_op: 'rgba(204, 16, 52, 0.5)',\r\n\t\tmultiplier: 800,\r\n\t},\r\n\trecovered: {\r\n\t\thex: '#7dd71d',\r\n\t\trgb: 'rgb(125, 215, 29)',\r\n\t\thalf_op: 'rgba(125, 215, 29, 0.5)',\r\n\t\tmultiplier: 1200,\r\n\t},\r\n\tdeaths: {\r\n\t\thex: '#fb4443',\r\n\t\trgb: 'rgb(251, 68, 67)',\r\n\t\thalf_op: 'rgba(251, 68, 67, 0.5)',\r\n\t\tmultiplier: 2000,\r\n\t},\r\n};\r\n\r\nexport const sortData = (data) => {\r\n\tlet sortedData = [...data];\r\n\treturn sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n\tstat ? `+${numeral(stat).format('0.0a')}` : '+0';\r\n\r\nexport const showDataOnMap = (data, casesType = 'cases') =>\r\n\tdata.map((country, idx) => (\r\n\t\t<Circle\r\n\t\t\tkey={idx}\r\n\t\t\tcenter={[country.countryInfo.lat, country.countryInfo.long]}\r\n\t\t\tcolor={casesTypeColors[casesType].hex}\r\n\t\t\tfillColor={casesTypeColors[casesType].hex}\r\n\t\t\tfillOpacity={0.4}\r\n\t\t\tradius={\r\n\t\t\t\tMath.sqrt(country[casesType]) *\r\n\t\t\t\tcasesTypeColors[casesType].multiplier *\r\n\t\t\t\t0.1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Popup>\r\n\t\t\t\t<div className='info-container'>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName='info-flag'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundImage: `url(${country.countryInfo.flag})`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t\t<div className='info-name'>{country.country}</div>\r\n\t\t\t\t\t<div className='info-confirmed'>\r\n\t\t\t\t\t\tCases: {numeral(country.cases).format('0,0')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='info-recovered'>\r\n\t\t\t\t\t\tRecovered: {numeral(country.recovered).format('0,0')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='info-deaths'>\r\n\t\t\t\t\t\tDeaths: {numeral(country.deaths).format('0,0')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Popup>\r\n\t\t</Circle>\r\n\t));\r\n","import React from 'react';\r\nimport { Map as LeafletMap, TileLayer } from 'react-leaflet';\r\nimport './Map.css';\r\nimport { showDataOnMap } from './util';\r\n\r\nconst Map = (props) => {\r\n\tconst { countries, casesType, center, zoom } = props;\r\n\treturn (\r\n\t\t<div className='map'>\r\n\t\t\t<LeafletMap center={center} zoom={zoom} >\r\n\t\t\t\t<TileLayer\r\n\t\t\t\t\turl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n\t\t\t\t\tattribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n\t\t\t\t/>\r\n\t\t\t\t{showDataOnMap(countries, casesType)}\r\n\t\t\t</LeafletMap>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport './Table.css';\r\nimport numeral from 'numeral';\r\n\r\nconst Table = (props) => {\r\n\tconst { countries } = props;\r\n\treturn (\r\n\t\t<div className='table'>\r\n\t\t\t<table\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\tmargin: '0 auto',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: '#fff',\r\n\t\t\t\t\t\t\tcolor: '#000',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<th scope='col'>\r\n\t\t\t\t\t\t\t<strong> Country </strong>{' '}\r\n\t\t\t\t\t\t</th>{' '}\r\n\t\t\t\t\t\t<th scope='col'>\r\n\t\t\t\t\t\t\t<strong> Cases </strong>{' '}\r\n\t\t\t\t\t\t</th>{' '}\r\n\t\t\t\t\t</tr>{' '}\r\n\t\t\t\t</thead>{' '}\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t{countries.map(({ country, cases }) => (\r\n\t\t\t\t\t\t<tr key={country}>\r\n\t\t\t\t\t\t\t<td> {country} </td>{' '}\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t{numeral(cases).format('0,0')}{' '}\r\n\t\t\t\t\t\t\t\t</strong>{' '}\r\n\t\t\t\t\t\t\t</td>{' '}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}{' '}\r\n\t\t\t\t</tbody>{' '}\r\n\t\t\t</table>{' '}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { log } from './consoleLog';\r\nimport './App.css';\r\nimport {\r\n\tMenuItem,\r\n\tFormControl,\r\n\tSelect,\r\n\tCard,\r\n\tCardContent,\r\n} from '@material-ui/core';\r\nimport InfoBox from './InfoBox';\r\nimport LineGraph from './LineGraph';\r\nimport Map from './Map';\r\nimport Table from './Table';\r\nimport { sortData, prettyPrintStat } from './util';\r\nimport numeral from 'numeral';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst App = () => {\r\n\tconst [country, setInputCountry] = useState('worldwide');\r\n\tconst [countryInfo, setCountryInfo] = useState({});\r\n\tconst [countries, setCountries] = useState([]);\r\n\tconst [mapCountries, setMapCountries] = useState([]);\r\n\tconst [tableData, setTableData] = useState([]);\r\n\tconst [casesType, setCasesType] = useState('cases');\r\n\tconst [mapCenter, setMapCenter] = useState({\r\n\t\tlat: 34.80746,\r\n\t\tlng: -40.4796,\r\n\t});\r\n\tconst [mapZoom, setMapZoom] = useState(3);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('https://disease.sh/v3/covid-19/all')\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetCountryInfo(data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tlog.err(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getCountriesData = async () => {\r\n\t\t\tawait fetch('https://disease.sh/v3/covid-19/countries')\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconst countries = data.map((country) => ({\r\n\t\t\t\t\t\tname: country.country,\r\n\t\t\t\t\t\tvalue: country.countryInfo.iso2,\r\n\t\t\t\t\t}));\r\n\t\t\t\t\tlet sortedData = sortData(data);\r\n\t\t\t\t\tsetTableData(sortedData);\r\n\t\t\t\t\tsetMapCountries(data);\r\n\t\t\t\t\tsetCountries(countries);\r\n\t\t\t\t\tlog.succOut(sortedData);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tlog.errIn(err);\r\n\t\t\t\t});\r\n\t\t};\r\n\t\tgetCountriesData();\r\n\t}, []);\r\n\r\n\tconst onCountryChange = async (e) => {\r\n\t\tconst countryCode = e.target.value;\r\n\t\tsetInputCountry(countryCode);\r\n\r\n\t\tconst url =\r\n\t\t\tcountryCode === 'worldwide'\r\n\t\t\t\t? 'https://disease.sh/v3/covid-19/all'\r\n\t\t\t\t: `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n\t\tawait fetch(url)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetInputCountry(countryCode);\r\n\t\t\t\tsetCountryInfo(data);\r\n\t\t\t\tif (countryCode === 'worldwide') {\r\n\t\t\t\t\tsetMapCenter({ lat: 34.80746, lng: -40.4796 });\r\n\t\t\t\t\tsetMapZoom(3);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n\t\t\t\t\tsetMapZoom(4);\r\n\t\t\t\t}\r\n\t\t\t\tlog.varOut(data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tlog.errIn(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t<div className='app__left'>\r\n\t\t\t\t<div className='app__header'>\r\n\t\t\t\t\t<h1>COVID-19 TRACKER</h1>\r\n\t\t\t\t\t<FormControl className='app__dropdown'>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\tvalue={country}\r\n\t\t\t\t\t\t\tkey='select'\r\n\t\t\t\t\t\t\tonChange={onCountryChange}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuItem value='worldwide' key='worldwide'>\r\n\t\t\t\t\t\t\t\tWorldwide\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t{countries.map((country, idx) => (\r\n\t\t\t\t\t\t\t\t<MenuItem value={country.value} key={idx}>\r\n\t\t\t\t\t\t\t\t\t{country.name}\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='app__stats'>\r\n\t\t\t\t\t<InfoBox\r\n\t\t\t\t\t\tisRed\r\n\t\t\t\t\t\tactive={casesType === 'cases'}\r\n\t\t\t\t\t\tonClick={(e) => setCasesType('cases')}\r\n\t\t\t\t\t\ttitle='Coronavirus Cases'\r\n\t\t\t\t\t\tcases={prettyPrintStat(countryInfo.todayCases)}\r\n\t\t\t\t\t\ttotal={numeral(countryInfo.cases).format('0.0a')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InfoBox\r\n\t\t\t\t\t\tactive={casesType === 'recovered'}\r\n\t\t\t\t\t\tonClick={(e) => setCasesType('recovered')}\r\n\t\t\t\t\t\ttitle='Recovered'\r\n\t\t\t\t\t\tcases={prettyPrintStat(countryInfo.todayRecovered)}\r\n\t\t\t\t\t\ttotal={numeral(countryInfo.recovered).format('0.0a')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InfoBox\r\n\t\t\t\t\t\tisOrange\r\n\t\t\t\t\t\tactive={casesType === 'deaths'}\r\n\t\t\t\t\t\tonClick={(e) => setCasesType('deaths')}\r\n\t\t\t\t\t\ttitle='Deaths'\r\n\t\t\t\t\t\tcases={prettyPrintStat(countryInfo.deaths)}\r\n\t\t\t\t\t\ttotal={numeral(countryInfo.deaths).format('0.0a')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Map\r\n\t\t\t\t\tcountries={mapCountries}\r\n\t\t\t\t\tcasesType={casesType}\r\n\t\t\t\t\tcenter={mapCenter}\r\n\t\t\t\t\tzoom={mapZoom}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<Card className='app__right'>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<h3 className='app__right_text-center'>\r\n\t\t\t\t\t\t<span>Live Cases</span> by Country\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<Table countries={tableData} />\r\n\t\t\t\t\t<h3 className='app__right_text-center app__graphTitle'>\r\n\t\t\t\t\t\tWorldwide new <span>{casesType}</span>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<LineGraph className='app__graph' casesType={casesType} />\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<StrictMode>\n\t\t<App />\n\t</StrictMode>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}